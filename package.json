{
  "name": "express-prototype",
  "description": "GOVUK prototyping app in Express",
  "version": "6.3.0",
  "private": true,
  "engines": {
    "node": ">=6.11.1 <7.0"
  },
  "config": {
    "s3BucketName": "rjfexpress",
    "region": "eu-west-1",
    "cloudFormationStackName": "AwsServerlessExpressStack",
    "functionName": "AwsServerlessExpressFunction",
    "accountId": "xxxxxx"
  },
  "scripts": {
    "start": "node start.js",
    "build-dist": "gulp build-dist",
    "config": "node ./scripts/configure.js",
    "deconfig": "node ./scripts/deconfigure.js",
    "local": "node scripts/local",
    "test": "npm run unit && npm run integration",
    "integration": "gulp integration",
    "unit": "gulp unit",
    "lint": "./node_modules/.bin/eslint lib test gulp app  \"./*.js\"",
    "prepush": "npm test && npm run lint && npm run check-security",
    "check-security": "git secrets --scan",
    "check-security-log": "git log -p | scanrepo",
    "invoke-lambda": "aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "create-bucket": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "delete-bucket": "aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
    "package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket $npm_package_config_s3BucketName --output-template packaged-sam.yaml --region $npm_package_config_region",
    "deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --region $npm_package_config_region",
    "package-deploy": "npm run package && npm run deploy",
    "delete-stack": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
    "setup": "npm install && (aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy",
    "win-config": "npm run config",
    "win-deconfig": "npm run deconfig",
    "win-local": "npm run local",
    "win-invoke-lambda": "aws lambda invoke --function-name %npm_package_config_functionName% --region %npm_package_config_region% --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
    "win-create-bucket": "aws s3 mb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
    "win-delete-bucket": "aws s3 rb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
    "win-package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket %npm_package_config_s3BucketName% --output-template packaged-sam.yaml --region %npm_package_config_region%",
    "win-deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name %npm_package_config_cloudFormationStackName% --capabilities CAPABILITY_IAM --region %npm_package_config_region%",
    "win-package-deploy": "npm run win-package && npm run win-deploy",
    "win-delete-stack": "aws cloudformation delete-stack --stack-name %npm_package_config_cloudFormationStackName% --region %npm_package_config_region%",
    "win-setup": "npm install && (aws s3api get-bucket-location --bucket %npm_package_config_s3BucketName% --region %npm_package_config_region% || npm run win-create-bucket) && npm run win-package-deploy"
  },
  "dependencies": {
    "aws-serverless-express": "^3.0.2",
    "basic-auth": "^1.0.3",
    "basic-auth-connect": "^1.0.0",
    "bluebird": "3.5.1",
    "body-parser": "^1.14.1",
    "browser-sync": "^2.11.1",
    "compression": "1.7.1",
    "connect-ensure-login": "^0.1.1",
    "cookie-session": "^2.0.0-beta.3",
    "cors": "^2.8.4",
    "cross-spawn": "^5.0.0",
    "dotenv": "^4.0.0",
    "express": "4.15.2",
    "express-paginate": "^0.3.0",
    "express-validator": "4.3.0",
    "express-writer": "0.0.4",
    "govuk-elements-sass": "3.1.1",
    "govuk_frontend_toolkit": "7.1.0",
    "govuk_template_jinja": "0.22.3",
    "gulp": "^3.9.1",
    "gulp-clean": "^0.3.2",
    "gulp-mocha": "^4.3.1",
    "gulp-nodemon": "^2.1.0",
    "gulp-sass": "3.1.0",
    "gulp-sourcemaps": "^2.6.0",
    "gulp-util": "^3.0.7",
    "helmet": "3.9.0",
    "json2csv": "^3.11.5",
    "marked": "^0.3.6",
    "minimist": "1.2.0",
    "notifications-node-client": "^3.0.0",
    "nunjucks": "^2.5.2",
    "passport": "^0.4.0",
    "passport-local": "^1.0.0",
    "portscanner": "^2.1.1",
    "prompt": "^1.0.0",
    "readdir": "0.0.13",
    "request": "^2.83.0",
    "require-dir": "^0.3.0",
    "run-sequence": "^1.2.2",
    "serve-favicon": "2.4.2",
    "standard": "^10.0.2",
    "supertest": "^3.0.0",
    "sync-request": "^4.0.3"
  },
  "greenkeeper": {
    "ignore": [
      "nunjucks"
    ]
  },
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.0.2",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-class-properties": "^6.24.1",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-preset-env": "^1.6.1",
    "babel-register": "^6.26.0",
    "eslint": "^4.11.0",
    "eslint-config-airbnb-base": "^12.1.0",
    "expect": "^21.2.1",
    "gulp-babel": "^7.0.0",
    "gulp-concat": "^2.6.1",
    "gulp-sequence": "^0.4.6",
    "gulp-sourcemaps": "^2.6.1",
    "gulp-zip": "^4.0.0",
    "sinon": "^4.1.2",
    "yargs": "^10.0.3"
  }
}
